
.navlink-active {
  font-weight: bold;
  color: black;
}

.navlink-active span {
  border-bottom: 2px solid #0fbad8;
}

.z-index-2000 {
  z-index: 2000;
}

.modal-backdrop {
  z-index: -1; 
  display: none;
}

.modal {
  /*border: 1px solid green;*/
  background: rgba(0, 0, 0, 0.5);
  height: 100vh;
}

.padding-buttons {
  padding-top: 40px;
}

.text-area-h {
  height: 75px;
}

.n-items {
  background-color: #87CB16;
  text-align: center;
  border-radius: 10px;
  min-width: 18px;
  padding: 0 5px;
  margin-left: 5px;
  font-size: 12px;
  color: #FFFFFF;
  font-weight: bold;
}

/*para imagen boton*/
.btn-empty {
  padding: 0;
  border: 0;
  background: none;
}

/*para boton en celda*/
td:last-child{
  display: inline !important;
}

/*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
	@media
	  only screen 
    and (max-width: 760px), (min-device-width: 768px) 
    and (max-device-width: 1024px) {

  /* Force table to not be like tables anymore */
  table, thead, tbody, th, td, tr {
    display: block;
  }

  th, td {
    border: 0 !important;
  }

  /* Hide table headers (but not display: none;, for accessibility) */
  thead tr {
    position: absolute;
    top: -9999px;
    left: -9999px;
  }

  tbody tr {
    margin: 0 0 1rem 0;
    border-top: 2px solid #3EBAD8
  }
    
  tr:nth-child(odd) {
    background: #ccc;
  }
  
  td {
    /* Behave  like a "row" */
    border: none;
    /* border-bottom: 1px solid #eee; */
    position: relative;
    padding-left: 50%;
  }

  td:before {
    /* Now like a table header */
    /*position: absolute;*/
    /* Top/left values mimic padding */
    top: 0;
    left: 6px;
    width: 45%;
    padding-right: 0px;
    white-space: nowrap;
    font-weight: bold;
  }
  

  tfoot tr th {
    background-color: white;
  }
  tfoot tr td[colspan] {
    display: none;
  }

  td.td-total {
    background-color: white;
  }
  /*
  Label the data
  You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
  */
	
	/*
	Label the data
	*/
	tbody tr td:nth-of-type(1):before { content: "nÂº:"; }
	tbody tr td:nth-of-type(2):before { content: ""; }
	tbody tr td:nth-of-type(3):before { content: ""; }
	tbody tr td:nth-of-type(4):before { content: ""; }
  /*td:nth-of-type(5):before { content: "Action"; }*/
  tfoot tr td:nth-of-type(2):before { content:"Total: ";}

}